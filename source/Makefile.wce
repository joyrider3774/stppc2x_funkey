# Makefile for puzzles on PocketPC using eMbedded Visual C.
#
# This file was created by `mkfiles.pl' from the `Recipe' file.
# DO NOT EDIT THIS FILE DIRECTLY; edit Recipe or mkfiles.pl instead.

# If you rename this file to `Makefile', you should change this line,
# so that the .rsp files still depend on the correct makefile.
MAKEFILE = Makefile.wce

# This makefile expects the environment to have been set up by one
# of the PocketPC batch files wcearmv4.bat and wceemulator.bat. No
# other build targets are currently supported, because they would
# need a section in this if statement.
!if "$(TARGETCPU)" == "emulator"
PLATFORM_DEFS=/D "_i386_" /D "i_386_" /D "_X86_" /D "x86"
CC=cl
BASELIBS=commctrl.lib coredll.lib corelibc.lib aygshell.lib
MACHINE=IX86
!else
PLATFORM_DEFS=/D "ARM" /D "_ARM_" /D "ARMV4"
CC=clarm
BASELIBS=commctrl.lib coredll.lib aygshell.lib
MACHINE=ARM
!endif

# C compilation flags
CFLAGS = /nologo /W3 /O1 /MC /D _WIN32_WCE=420 /D "WIN32_PLATFORM_PSPC=400" /D UNDER_CE=420 \
         $(PLATFORM_DEFS) \
         /D "UNICODE" /D "_UNICODE" /D "NDEBUG" /D "NO_HTMLHELP"

LFLAGS = /nologo /incremental:no \
         /base:0x00010000 /stack:0x10000,0x1000 /entry:WinMainCRTStartup \
         /nodefaultlib:libc.lib /nodefaultlib:libcmt.lib /nodefaultlib:msvcrt.lib /nodefaultlib:OLDNAMES.lib \
         /subsystem:windowsce,4.20 /align:4096 /MACHINE:$(MACHINE)

RCFL = /d UNDER_CE=420 /d _WIN32_WCE=420 /d "WIN32_PLATFORM_PSPC=400" \
       $(PLATFORM_DEFS) \
       /d "NDEBUG" /d "UNICODE" /d "_UNICODE"

all: blackbox.exe bridges.exe cube.exe dominosa.exe fifteen.exe filling.exe \
		flip.exe galaxies.exe guess.exe inertia.exe lightup.exe \
		loopy.exe map.exe mines.exe netgame.exe netslide.exe \
		nullgame.exe pattern.exe pegs.exe rect.exe samegame.exe \
		sixteen.exe slant.exe solo.exe tents.exe twiddle.exe \
		unequal.exe untangle.exe

blackbox.exe: blackbox.obj blackbox.res drawing.obj malloc.obj midend.obj \
		misc.obj printing.obj random.obj version.obj windows.obj \
		blackbox.rsp
	link $(LFLAGS) -out:blackbox.exe -map:blackbox.map @blackbox.rsp

bridges.exe: bridges.obj bridges.res drawing.obj dsf.obj malloc.obj \
		midend.obj misc.obj printing.obj random.obj version.obj \
		windows.obj bridges.rsp
	link $(LFLAGS) -out:bridges.exe -map:bridges.map @bridges.rsp

cube.exe: cube.obj cube.res drawing.obj malloc.obj midend.obj misc.obj \
		printing.obj random.obj version.obj windows.obj cube.rsp
	link $(LFLAGS) -out:cube.exe -map:cube.map @cube.rsp

dominosa.exe: dominosa.obj dominosa.res drawing.obj malloc.obj midend.obj \
		misc.obj printing.obj random.obj version.obj windows.obj \
		dominosa.rsp
	link $(LFLAGS) -out:dominosa.exe -map:dominosa.map @dominosa.rsp

fifteen.exe: drawing.obj fifteen.obj fifteen.res malloc.obj midend.obj \
		misc.obj printing.obj random.obj version.obj windows.obj \
		fifteen.rsp
	link $(LFLAGS) -out:fifteen.exe -map:fifteen.map @fifteen.rsp

filling.exe: drawing.obj dsf.obj filling.obj filling.res malloc.obj \
		midend.obj misc.obj printing.obj random.obj version.obj \
		windows.obj filling.rsp
	link $(LFLAGS) -out:filling.exe -map:filling.map @filling.rsp

flip.exe: drawing.obj flip.obj flip.res malloc.obj midend.obj misc.obj \
		printing.obj random.obj tree234.obj version.obj windows.obj \
		flip.rsp
	link $(LFLAGS) -out:flip.exe -map:flip.map @flip.rsp

galaxies.exe: drawing.obj dsf.obj galaxies.obj galaxies.res malloc.obj \
		midend.obj misc.obj printing.obj random.obj version.obj \
		windows.obj galaxies.rsp
	link $(LFLAGS) -out:galaxies.exe -map:galaxies.map @galaxies.rsp

guess.exe: drawing.obj guess.obj guess.res malloc.obj midend.obj misc.obj \
		printing.obj random.obj version.obj windows.obj guess.rsp
	link $(LFLAGS) -out:guess.exe -map:guess.map @guess.rsp

inertia.exe: drawing.obj inertia.obj inertia.res malloc.obj midend.obj \
		misc.obj printing.obj random.obj version.obj windows.obj \
		inertia.rsp
	link $(LFLAGS) -out:inertia.exe -map:inertia.map @inertia.rsp

lightup.exe: combi.obj drawing.obj lightup.obj lightup.res malloc.obj \
		midend.obj misc.obj printing.obj random.obj version.obj \
		windows.obj lightup.rsp
	link $(LFLAGS) -out:lightup.exe -map:lightup.map @lightup.rsp

loopy.exe: drawing.obj dsf.obj loopy.obj loopy.res malloc.obj midend.obj \
		misc.obj printing.obj random.obj tree234.obj version.obj \
		windows.obj loopy.rsp
	link $(LFLAGS) -out:loopy.exe -map:loopy.map @loopy.rsp

map.exe: drawing.obj dsf.obj malloc.obj map.obj map.res midend.obj misc.obj \
		printing.obj random.obj version.obj windows.obj map.rsp
	link $(LFLAGS) -out:map.exe -map:map.map @map.rsp

mines.exe: drawing.obj malloc.obj midend.obj mines.obj mines.res misc.obj \
		printing.obj random.obj tree234.obj version.obj windows.obj \
		mines.rsp
	link $(LFLAGS) -out:mines.exe -map:mines.map @mines.rsp

netgame.exe: drawing.obj dsf.obj malloc.obj midend.obj misc.obj net.obj \
		net.res printing.obj random.obj tree234.obj version.obj \
		windows.obj netgame.rsp
	link $(LFLAGS) -out:netgame.exe -map:netgame.map @netgame.rsp

netslide.exe: drawing.obj malloc.obj midend.obj misc.obj netslide.obj \
		netslide.res printing.obj random.obj tree234.obj version.obj \
		windows.obj netslide.rsp
	link $(LFLAGS) -out:netslide.exe -map:netslide.map @netslide.rsp

nullgame.exe: drawing.obj malloc.obj midend.obj misc.obj noicon.res \
		nullgame.obj printing.obj random.obj version.obj windows.obj \
		nullgame.rsp
	link $(LFLAGS) -out:nullgame.exe -map:nullgame.map @nullgame.rsp

pattern.exe: drawing.obj malloc.obj midend.obj misc.obj pattern.obj \
		pattern.res printing.obj random.obj version.obj windows.obj \
		pattern.rsp
	link $(LFLAGS) -out:pattern.exe -map:pattern.map @pattern.rsp

pegs.exe: drawing.obj malloc.obj midend.obj misc.obj pegs.obj pegs.res \
		printing.obj random.obj tree234.obj version.obj windows.obj \
		pegs.rsp
	link $(LFLAGS) -out:pegs.exe -map:pegs.map @pegs.rsp

rect.exe: drawing.obj malloc.obj midend.obj misc.obj printing.obj random.obj \
		rect.obj rect.res version.obj windows.obj rect.rsp
	link $(LFLAGS) -out:rect.exe -map:rect.map @rect.rsp

samegame.exe: drawing.obj malloc.obj midend.obj misc.obj printing.obj \
		random.obj samegame.obj samegame.res version.obj windows.obj \
		samegame.rsp
	link $(LFLAGS) -out:samegame.exe -map:samegame.map @samegame.rsp

sixteen.exe: drawing.obj malloc.obj midend.obj misc.obj printing.obj \
		random.obj sixteen.obj sixteen.res version.obj windows.obj \
		sixteen.rsp
	link $(LFLAGS) -out:sixteen.exe -map:sixteen.map @sixteen.rsp

slant.exe: drawing.obj dsf.obj malloc.obj midend.obj misc.obj printing.obj \
		random.obj slant.obj slant.res version.obj windows.obj \
		slant.rsp
	link $(LFLAGS) -out:slant.exe -map:slant.map @slant.rsp

solo.exe: drawing.obj malloc.obj midend.obj misc.obj printing.obj random.obj \
		solo.obj solo.res version.obj windows.obj solo.rsp
	link $(LFLAGS) -out:solo.exe -map:solo.map @solo.rsp

tents.exe: drawing.obj malloc.obj maxflow.obj midend.obj misc.obj \
		printing.obj random.obj tents.obj tents.res version.obj \
		windows.obj tents.rsp
	link $(LFLAGS) -out:tents.exe -map:tents.map @tents.rsp

twiddle.exe: drawing.obj malloc.obj midend.obj misc.obj printing.obj \
		random.obj twiddle.obj twiddle.res version.obj windows.obj \
		twiddle.rsp
	link $(LFLAGS) -out:twiddle.exe -map:twiddle.map @twiddle.rsp

unequal.exe: drawing.obj latin.obj malloc.obj maxflow.obj midend.obj \
		misc.obj printing.obj random.obj tree234.obj unequal.obj \
		unequal.res version.obj windows.obj unequal.rsp
	link $(LFLAGS) -out:unequal.exe -map:unequal.map @unequal.rsp

untangle.exe: drawing.obj malloc.obj midend.obj misc.obj printing.obj \
		random.obj tree234.obj untangle.obj untangle.res version.obj \
		windows.obj untangle.rsp
	link $(LFLAGS) -out:untangle.exe -map:untangle.map @untangle.rsp

blackbox.rsp: $(MAKEFILE)
	echo $(BASELIBS) > blackbox.rsp
	echo blackbox.obj blackbox.res drawing.obj malloc.obj >> blackbox.rsp
	echo midend.obj misc.obj printing.obj random.obj >> blackbox.rsp
	echo version.obj windows.obj >> blackbox.rsp

bridges.rsp: $(MAKEFILE)
	echo $(BASELIBS) > bridges.rsp
	echo bridges.obj bridges.res drawing.obj dsf.obj >> bridges.rsp
	echo malloc.obj midend.obj misc.obj printing.obj >> bridges.rsp
	echo random.obj version.obj windows.obj >> bridges.rsp

cube.rsp: $(MAKEFILE)
	echo $(BASELIBS) > cube.rsp
	echo cube.obj cube.res drawing.obj malloc.obj >> cube.rsp
	echo midend.obj misc.obj printing.obj random.obj >> cube.rsp
	echo version.obj windows.obj >> cube.rsp

dominosa.rsp: $(MAKEFILE)
	echo $(BASELIBS) > dominosa.rsp
	echo dominosa.obj dominosa.res drawing.obj malloc.obj >> dominosa.rsp
	echo midend.obj misc.obj printing.obj random.obj >> dominosa.rsp
	echo version.obj windows.obj >> dominosa.rsp

fifteen.rsp: $(MAKEFILE)
	echo $(BASELIBS) > fifteen.rsp
	echo drawing.obj fifteen.obj fifteen.res malloc.obj >> fifteen.rsp
	echo midend.obj misc.obj printing.obj random.obj >> fifteen.rsp
	echo version.obj windows.obj >> fifteen.rsp

filling.rsp: $(MAKEFILE)
	echo $(BASELIBS) > filling.rsp
	echo drawing.obj dsf.obj filling.obj filling.res >> filling.rsp
	echo malloc.obj midend.obj misc.obj printing.obj >> filling.rsp
	echo random.obj version.obj windows.obj >> filling.rsp

flip.rsp: $(MAKEFILE)
	echo $(BASELIBS) > flip.rsp
	echo drawing.obj flip.obj flip.res malloc.obj >> flip.rsp
	echo midend.obj misc.obj printing.obj random.obj >> flip.rsp
	echo tree234.obj version.obj windows.obj >> flip.rsp

galaxies.rsp: $(MAKEFILE)
	echo $(BASELIBS) > galaxies.rsp
	echo drawing.obj dsf.obj galaxies.obj galaxies.res >> galaxies.rsp
	echo malloc.obj midend.obj misc.obj printing.obj >> galaxies.rsp
	echo random.obj version.obj windows.obj >> galaxies.rsp

guess.rsp: $(MAKEFILE)
	echo $(BASELIBS) > guess.rsp
	echo drawing.obj guess.obj guess.res malloc.obj >> guess.rsp
	echo midend.obj misc.obj printing.obj random.obj >> guess.rsp
	echo version.obj windows.obj >> guess.rsp

inertia.rsp: $(MAKEFILE)
	echo $(BASELIBS) > inertia.rsp
	echo drawing.obj inertia.obj inertia.res malloc.obj >> inertia.rsp
	echo midend.obj misc.obj printing.obj random.obj >> inertia.rsp
	echo version.obj windows.obj >> inertia.rsp

lightup.rsp: $(MAKEFILE)
	echo $(BASELIBS) > lightup.rsp
	echo combi.obj drawing.obj lightup.obj lightup.res >> lightup.rsp
	echo malloc.obj midend.obj misc.obj printing.obj >> lightup.rsp
	echo random.obj version.obj windows.obj >> lightup.rsp

loopy.rsp: $(MAKEFILE)
	echo $(BASELIBS) > loopy.rsp
	echo drawing.obj dsf.obj loopy.obj loopy.res >> loopy.rsp
	echo malloc.obj midend.obj misc.obj printing.obj >> loopy.rsp
	echo random.obj tree234.obj version.obj windows.obj >> loopy.rsp

map.rsp: $(MAKEFILE)
	echo $(BASELIBS) > map.rsp
	echo drawing.obj dsf.obj malloc.obj map.obj map.res >> map.rsp
	echo midend.obj misc.obj printing.obj random.obj >> map.rsp
	echo version.obj windows.obj >> map.rsp

mines.rsp: $(MAKEFILE)
	echo $(BASELIBS) > mines.rsp
	echo drawing.obj malloc.obj midend.obj mines.obj >> mines.rsp
	echo mines.res misc.obj printing.obj random.obj >> mines.rsp
	echo tree234.obj version.obj windows.obj >> mines.rsp

netgame.rsp: $(MAKEFILE)
	echo $(BASELIBS) > netgame.rsp
	echo drawing.obj dsf.obj malloc.obj midend.obj >> netgame.rsp
	echo misc.obj net.obj net.res printing.obj random.obj >> netgame.rsp
	echo tree234.obj version.obj windows.obj >> netgame.rsp

netslide.rsp: $(MAKEFILE)
	echo $(BASELIBS) > netslide.rsp
	echo drawing.obj malloc.obj midend.obj misc.obj >> netslide.rsp
	echo netslide.obj netslide.res printing.obj random.obj >> netslide.rsp
	echo tree234.obj version.obj windows.obj >> netslide.rsp

nullgame.rsp: $(MAKEFILE)
	echo $(BASELIBS) > nullgame.rsp
	echo drawing.obj malloc.obj midend.obj misc.obj >> nullgame.rsp
	echo noicon.res nullgame.obj printing.obj random.obj >> nullgame.rsp
	echo version.obj windows.obj >> nullgame.rsp

pattern.rsp: $(MAKEFILE)
	echo $(BASELIBS) > pattern.rsp
	echo drawing.obj malloc.obj midend.obj misc.obj >> pattern.rsp
	echo pattern.obj pattern.res printing.obj random.obj >> pattern.rsp
	echo version.obj windows.obj >> pattern.rsp

pegs.rsp: $(MAKEFILE)
	echo $(BASELIBS) > pegs.rsp
	echo drawing.obj malloc.obj midend.obj misc.obj >> pegs.rsp
	echo pegs.obj pegs.res printing.obj random.obj >> pegs.rsp
	echo tree234.obj version.obj windows.obj >> pegs.rsp

rect.rsp: $(MAKEFILE)
	echo $(BASELIBS) > rect.rsp
	echo drawing.obj malloc.obj midend.obj misc.obj >> rect.rsp
	echo printing.obj random.obj rect.obj rect.res >> rect.rsp
	echo version.obj windows.obj >> rect.rsp

samegame.rsp: $(MAKEFILE)
	echo $(BASELIBS) > samegame.rsp
	echo drawing.obj malloc.obj midend.obj misc.obj >> samegame.rsp
	echo printing.obj random.obj samegame.obj samegame.res >> samegame.rsp
	echo version.obj windows.obj >> samegame.rsp

sixteen.rsp: $(MAKEFILE)
	echo $(BASELIBS) > sixteen.rsp
	echo drawing.obj malloc.obj midend.obj misc.obj >> sixteen.rsp
	echo printing.obj random.obj sixteen.obj sixteen.res >> sixteen.rsp
	echo version.obj windows.obj >> sixteen.rsp

slant.rsp: $(MAKEFILE)
	echo $(BASELIBS) > slant.rsp
	echo drawing.obj dsf.obj malloc.obj midend.obj >> slant.rsp
	echo misc.obj printing.obj random.obj slant.obj >> slant.rsp
	echo slant.res version.obj windows.obj >> slant.rsp

solo.rsp: $(MAKEFILE)
	echo $(BASELIBS) > solo.rsp
	echo drawing.obj malloc.obj midend.obj misc.obj >> solo.rsp
	echo printing.obj random.obj solo.obj solo.res >> solo.rsp
	echo version.obj windows.obj >> solo.rsp

tents.rsp: $(MAKEFILE)
	echo $(BASELIBS) > tents.rsp
	echo drawing.obj malloc.obj maxflow.obj midend.obj >> tents.rsp
	echo misc.obj printing.obj random.obj tents.obj >> tents.rsp
	echo tents.res version.obj windows.obj >> tents.rsp

twiddle.rsp: $(MAKEFILE)
	echo $(BASELIBS) > twiddle.rsp
	echo drawing.obj malloc.obj midend.obj misc.obj >> twiddle.rsp
	echo printing.obj random.obj twiddle.obj twiddle.res >> twiddle.rsp
	echo version.obj windows.obj >> twiddle.rsp

unequal.rsp: $(MAKEFILE)
	echo $(BASELIBS) > unequal.rsp
	echo drawing.obj latin.obj malloc.obj maxflow.obj >> unequal.rsp
	echo midend.obj misc.obj printing.obj random.obj >> unequal.rsp
	echo tree234.obj unequal.obj unequal.res version.obj >> unequal.rsp
	echo windows.obj >> unequal.rsp

untangle.rsp: $(MAKEFILE)
	echo $(BASELIBS) > untangle.rsp
	echo drawing.obj malloc.obj midend.obj misc.obj >> untangle.rsp
	echo printing.obj random.obj tree234.obj untangle.obj >> untangle.rsp
	echo untangle.res version.obj windows.obj >> untangle.rsp

blackbox.obj: .\blackbox.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\blackbox.c /Foblackbox.obj
blackbox-icon.obj: icons\blackbox-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\blackbox-icon.c /Foblackbox-icon.obj
blackbox.res: icons\blackbox.rc .\puzzles.rc2 icons\blackbox.ico \
		.\resource.h
	rc $(FWHACK) $(RCFL) -r -foblackbox.res icons\blackbox.rc
bridges.obj: .\bridges.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\bridges.c /Fobridges.obj
bridges-icon.obj: icons\bridges-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\bridges-icon.c /Fobridges-icon.obj
bridges.res: icons\bridges.rc .\puzzles.rc2 icons\bridges.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -fobridges.res icons\bridges.rc
combi.obj: .\combi.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\combi.c /Focombi.obj
cube.obj: .\cube.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\cube.c /Focube.obj
cube-icon.obj: icons\cube-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\cube-icon.c /Focube-icon.obj
cube.res: icons\cube.rc .\puzzles.rc2 icons\cube.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -focube.res icons\cube.rc
dominosa.obj: .\dominosa.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\dominosa.c /Fodominosa.obj
dominosa-icon.obj: icons\dominosa-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\dominosa-icon.c /Fodominosa-icon.obj
dominosa.res: icons\dominosa.rc .\puzzles.rc2 icons\dominosa.ico \
		.\resource.h
	rc $(FWHACK) $(RCFL) -r -fodominosa.res icons\dominosa.rc
drawing.obj: .\drawing.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\drawing.c /Fodrawing.obj
dsf.obj: .\dsf.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\dsf.c /Fodsf.obj
fifteen.obj: .\fifteen.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\fifteen.c /Fofifteen.obj
fifteen-icon.obj: icons\fifteen-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\fifteen-icon.c /Fofifteen-icon.obj
fifteen.res: icons\fifteen.rc .\puzzles.rc2 icons\fifteen.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -fofifteen.res icons\fifteen.rc
filling.obj: .\filling.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\filling.c /Fofilling.obj
filling-icon.obj: icons\filling-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\filling-icon.c /Fofilling-icon.obj
filling.res: icons\filling.rc .\puzzles.rc2 icons\filling.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -fofilling.res icons\filling.rc
filling2.obj: .\filling.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /DSTANDALONE_SOLVER /c .\filling.c /Fofilling2.obj
flip.obj: .\flip.c .\puzzles.h .\tree234.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\flip.c /Foflip.obj
flip-icon.obj: icons\flip-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\flip-icon.c /Foflip-icon.obj
flip.res: icons\flip.rc .\puzzles.rc2 icons\flip.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -foflip.res icons\flip.rc
galaxies.obj: .\galaxies.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\galaxies.c /Fogalaxies.obj
galaxies-icon.obj: icons\galaxies-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\galaxies-icon.c /Fogalaxies-icon.obj
galaxies.res: icons\galaxies.rc .\puzzles.rc2 icons\galaxies.ico \
		.\resource.h
	rc $(FWHACK) $(RCFL) -r -fogalaxies.res icons\galaxies.rc
galaxie4.obj: .\galaxies.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /DSTANDALONE_PICTURE_GENERATOR /c .\galaxies.c /Fogalaxie4.obj
galaxie2.obj: .\galaxies.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /DSTANDALONE_SOLVER /c .\galaxies.c /Fogalaxie2.obj
gtk.obj: .\gtk.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\gtk.c /Fogtk.obj
guess.obj: .\guess.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\guess.c /Foguess.obj
guess-icon.obj: icons\guess-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\guess-icon.c /Foguess-icon.obj
guess.res: icons\guess.rc .\puzzles.rc2 icons\guess.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -foguess.res icons\guess.rc
inertia.obj: .\inertia.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\inertia.c /Foinertia.obj
inertia-icon.obj: icons\inertia-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\inertia-icon.c /Foinertia-icon.obj
inertia.res: icons\inertia.rc .\puzzles.rc2 icons\inertia.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -foinertia.res icons\inertia.rc
latin.obj: .\latin.c .\puzzles.h .\tree234.h .\maxflow.h .\latin.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\latin.c /Folatin.obj
latin4.obj: .\latin.c .\puzzles.h .\tree234.h .\maxflow.h .\latin.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /DSTANDALONE_LATIN_TEST /c .\latin.c /Folatin4.obj
latin2.obj: .\latin.c .\puzzles.h .\tree234.h .\maxflow.h .\latin.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /DSTANDALONE_SOLVER /c .\latin.c /Folatin2.obj
lightup.obj: .\lightup.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\lightup.c /Folightup.obj
lightup-icon.obj: icons\lightup-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\lightup-icon.c /Folightup-icon.obj
lightup.res: icons\lightup.rc .\puzzles.rc2 icons\lightup.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -folightup.res icons\lightup.rc
lightup2.obj: .\lightup.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /DSTANDALONE_SOLVER /c .\lightup.c /Folightup2.obj
list.obj: .\list.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\list.c /Folist.obj
loopy.obj: .\loopy.c .\puzzles.h .\tree234.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\loopy.c /Foloopy.obj
loopy-icon.obj: icons\loopy-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\loopy-icon.c /Foloopy-icon.obj
loopy.res: icons\loopy.rc .\puzzles.rc2 icons\loopy.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -foloopy.res icons\loopy.rc
malloc.obj: .\malloc.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\malloc.c /Fomalloc.obj
map.obj: .\map.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\map.c /Fomap.obj
map-icon.obj: icons\map-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\map-icon.c /Fomap-icon.obj
map.res: icons\map.rc .\puzzles.rc2 icons\map.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -fomap.res icons\map.rc
map2.obj: .\map.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /DSTANDALONE_SOLVER /c .\map.c /Fomap2.obj
maxflow.obj: .\maxflow.c .\maxflow.h .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\maxflow.c /Fomaxflow.obj
midend.obj: .\midend.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\midend.c /Fomidend.obj
mines.obj: .\mines.c .\tree234.h .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\mines.c /Fomines.obj
mines-icon.obj: icons\mines-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\mines-icon.c /Fomines-icon.obj
mines.res: icons\mines.rc .\puzzles.rc2 icons\mines.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -fomines.res icons\mines.rc
mines2.obj: .\mines.c .\tree234.h .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /DSTANDALONE_OBFUSCATOR /c .\mines.c /Fomines2.obj
misc.obj: .\misc.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\misc.c /Fomisc.obj
net.obj: .\net.c .\puzzles.h .\tree234.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\net.c /Fonet.obj
net-icon.obj: icons\net-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\net-icon.c /Fonet-icon.obj
net.res: icons\net.rc .\puzzles.rc2 icons\net.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -fonet.res icons\net.rc
netslide.obj: .\netslide.c .\puzzles.h .\tree234.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\netslide.c /Fonetslide.obj
netslide-icon.obj: icons\netslide-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\netslide-icon.c /Fonetslide-icon.obj
netslide.res: icons\netslide.rc .\puzzles.rc2 icons\netslide.ico \
		.\resource.h
	rc $(FWHACK) $(RCFL) -r -fonetslide.res icons\netslide.rc
no-icon.obj: .\no-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\no-icon.c /Fono-icon.obj
noicon.res: .\noicon.rc .\puzzles.rc2 .\resource.h
	rc $(FWHACK) $(RCFL) -r -fonoicon.res .\noicon.rc
nullfe.obj: .\nullfe.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\nullfe.c /Fonullfe.obj
nullgame.obj: .\nullgame.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\nullgame.c /Fonullgame.obj
osx.obj: .\osx.m .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\osx.m /Foosx.obj
pattern.obj: .\pattern.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\pattern.c /Fopattern.obj
pattern-icon.obj: icons\pattern-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\pattern-icon.c /Fopattern-icon.obj
pattern.res: icons\pattern.rc .\puzzles.rc2 icons\pattern.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -fopattern.res icons\pattern.rc
pattern2.obj: .\pattern.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /DSTANDALONE_SOLVER /c .\pattern.c /Fopattern2.obj
pegs.obj: .\pegs.c .\puzzles.h .\tree234.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\pegs.c /Fopegs.obj
pegs-icon.obj: icons\pegs-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\pegs-icon.c /Fopegs-icon.obj
pegs.res: icons\pegs.rc .\puzzles.rc2 icons\pegs.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -fopegs.res icons\pegs.rc
printing.obj: .\printing.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\printing.c /Foprinting.obj
ps.obj: .\ps.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\ps.c /Fops.obj
random.obj: .\random.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\random.c /Forandom.obj
rect.obj: .\rect.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\rect.c /Forect.obj
rect-icon.obj: icons\rect-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\rect-icon.c /Forect-icon.obj
rect.res: icons\rect.rc .\puzzles.rc2 icons\rect.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -forect.res icons\rect.rc
samegame.obj: .\samegame.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\samegame.c /Fosamegame.obj
samegame-icon.obj: icons\samegame-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\samegame-icon.c /Fosamegame-icon.obj
samegame.res: icons\samegame.rc .\puzzles.rc2 icons\samegame.ico \
		.\resource.h
	rc $(FWHACK) $(RCFL) -r -fosamegame.res icons\samegame.rc
sixteen.obj: .\sixteen.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\sixteen.c /Fosixteen.obj
sixteen-icon.obj: icons\sixteen-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\sixteen-icon.c /Fosixteen-icon.obj
sixteen.res: icons\sixteen.rc .\puzzles.rc2 icons\sixteen.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -fosixteen.res icons\sixteen.rc
slant.obj: .\slant.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\slant.c /Foslant.obj
slant-icon.obj: icons\slant-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\slant-icon.c /Foslant-icon.obj
slant.res: icons\slant.rc .\puzzles.rc2 icons\slant.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -foslant.res icons\slant.rc
slant2.obj: .\slant.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /DSTANDALONE_SOLVER /c .\slant.c /Foslant2.obj
solo.obj: .\solo.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\solo.c /Fosolo.obj
solo-icon.obj: icons\solo-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\solo-icon.c /Fosolo-icon.obj
solo.res: icons\solo.rc .\puzzles.rc2 icons\solo.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -fosolo.res icons\solo.rc
solo2.obj: .\solo.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /DSTANDALONE_SOLVER /c .\solo.c /Fosolo2.obj
tents.obj: .\tents.c .\puzzles.h .\maxflow.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\tents.c /Fotents.obj
tents-icon.obj: icons\tents-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\tents-icon.c /Fotents-icon.obj
tents.res: icons\tents.rc .\puzzles.rc2 icons\tents.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -fotents.res icons\tents.rc
tents2.obj: .\tents.c .\puzzles.h .\maxflow.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /DSTANDALONE_SOLVER /c .\tents.c /Fotents2.obj
tree234.obj: .\tree234.c .\tree234.h .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\tree234.c /Fotree234.obj
twiddle.obj: .\twiddle.c .\puzzles.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\twiddle.c /Fotwiddle.obj
twiddle-icon.obj: icons\twiddle-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\twiddle-icon.c /Fotwiddle-icon.obj
twiddle.res: icons\twiddle.rc .\puzzles.rc2 icons\twiddle.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -fotwiddle.res icons\twiddle.rc
unequal.obj: .\unequal.c .\puzzles.h .\latin.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\unequal.c /Founequal.obj
unequal-icon.obj: icons\unequal-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\unequal-icon.c /Founequal-icon.obj
unequal.res: icons\unequal.rc .\puzzles.rc2 icons\unequal.ico .\resource.h
	rc $(FWHACK) $(RCFL) -r -founequal.res icons\unequal.rc
unequal2.obj: .\unequal.c .\puzzles.h .\latin.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /DSTANDALONE_SOLVER /c .\unequal.c /Founequal2.obj
untangle.obj: .\untangle.c .\puzzles.h .\tree234.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\untangle.c /Fountangle.obj
untangle-icon.obj: icons\untangle-icon.c
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c icons\untangle-icon.c /Fountangle-icon.obj
untangle.res: icons\untangle.rc .\puzzles.rc2 icons\untangle.ico \
		.\resource.h
	rc $(FWHACK) $(RCFL) -r -fountangle.res icons\untangle.rc
windows.obj: .\windows.c .\puzzles.h .\resource.h
	$(CC) $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) /c .\windows.c /Fowindows.obj

version.obj: *.c *.h
	$(CC) $(VER) $(CFLAGS) /c version.c

clean: tidy
	-del *.exe

tidy:
	-del *.obj
	-del *.res
	-del *.pch
	-del *.aps
	-del *.ilk
	-del *.pdb
	-del *.rsp
	-del *.dsp
	-del *.dsw
	-del *.ncb
	-del *.opt
	-del *.plg
	-del *.map
	-del *.idb
	-del debug.log
